on:
  workflow_call:
    inputs:
      expected-api-version:
        description: 'The version of the API to deploy (TODO, currently only the version to verify, it deploys latest always right now)'
        type: string

jobs:
  deploy:
    permissions:
      checks: write
    concurrency: deploy-staging
    runs-on: ubuntu-latest
    if: ${{ github.ref ==  vars.PROD_BRANCH }}
    environment:
      name: staging
      url: https://staging.languagedepot.org
    steps:
      - name: Deploy
        uses: drlove2002/secure-github-webhook@0.3.0
        with:
          url: ${{ vars.DEPLOY_WEBHOOK_URL }}
          hmacSecret: ${{ secrets.DEPLOY_KEY }}
          data: >-
            {
              "action" : "push",
              "ref" : "${{ github.ref }}",
              "version": "${{ inputs.expected-api-version }}"
            }
      - name: Verify Version
        if: ${{ inputs.expected-api-version }}
        env:
          TARGET_HOST: https://staging.languagedepot.org
          EXPECTED_VERSION: ${{ inputs.expected-api-version }}
        run: |
          IterateCount=5
          DelayMultiplier=5
          n=0
          until [ $n -ge $IterateCount ]
          do
            curl -s --head "$TARGET_HOST/api/healthz" > response.txt
            # get version from response, trim off the header and fix the line endings
            versionHeader=$((grep "lexbox-version" response.txt || echo VersionNotFound) | cut -d' ' -f 2 | tr -d '[:space:]')
            if [[ "$versionHeader" == "$EXPECTED_VERSION" ]]; then
                echo "Version is correct"
                exit 0
            else
                echo "Version '$versionHeader' is incorrect, expected '$EXPECTED_VERSION'"
                echo "response was:"
                cat response.txt
                n=$((n+1))
                sleep $((DelayMultiplier * n))
            fi
          done

          echo "Version $versionHeader is still incorrect after waiting"
          exit 1
      - uses: actions/checkout@v3
      - name: Build dotnet
        run: dotnet build
      - name: Ensure browsers are installed
        run: pwsh ./backend/Testing/bin/Debug/net7.0/playwright.ps1 install --with-deps
      - name: Integration Test
        env:
          TEST_SERVER_HOSTNAME: staging.languagedepot.org
          TEST_STANDARD_HG_HOSTNAME: hg-staging.languagedepot.org
          TEST_RESUMABLE_HG_HOSTNAME: resumable-staging.languagedepot.org
        run: dotnet test --logger trx --results-directory ./testresults --filter "Category=Integration"
      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: Integration Test
          files: ./testresults/*.trx

