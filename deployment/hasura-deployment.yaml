# https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
apiVersion: v1
kind: Service
metadata:
  name: hasura
  labels:
    app: hasura
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: hasura

---

# https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: db-data
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
#   storageClassName: weekly-snapshots-retain-4 # provided by LTOps

# ---

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasura
  labels:
    app: hasura
spec:
  selector:
    matchLabels:
      app: hasura
  strategy:
      type: Recreate
  template:
    # https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
    metadata:
      labels:
        app: hasura
    spec:
      containers:
      - name: hasura
        image: hasura/graphql-engine:v2.20.0-ce.cli-migrations-v3
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
        resources:
          requests: # TODO: need to establish resource limits, possibly after seeing it in action for some regular and/or load testing
            memory: 260Mi
            cpu: 0.1
          limits:
            memory: 400Mi

        env:
          - name: HASURA_GRAPHQL_ENABLE_TELEMETRY
            value: false
          - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
            value: startup, http-log, webhook-log, websocket-log, query-log
          - name: HASURA_GRAPHQL_EXPERIMENTAL_FEATURES
            value: naming_convention
          - name: HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION
            value: graphql-default
          - name: HASURA_GRAPHQL_ADMIN_SECRET
            valueFrom:
              secretKeyRef:
                  key: HASURA_GRAPHQL_ADMIN_SECRET
                  name: hasura

        # volumeMounts:
        # - name: data
        #   mountPath: /var/lib/postgresql

      # volumes:
      # - name: data
      #   persistentVolumeClaim:
      #     claimName: db-data
