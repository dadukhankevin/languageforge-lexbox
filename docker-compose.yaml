services:
  lex-box-api:
    container_name: lexBoxApi
    build:
      context: .
      dockerfile: backend/LexBoxApi/dev.Dockerfile
    ports:
      - 7075:80
    depends_on:
      - "db"
    volumes:
      - ./:/src
      - ./hg-web/repos:/hg-repos
    environment:
      DbConfig__LexBoxConnectionString: Host=db;Port=5432;Username=postgres;Password=${LEXBOX_POSTGRES_PW};Database=LexBox
      ASPNETCORE_ENVIRONMENT: Development
      HgConfig__RepoPath: /hg-repos
      Clusters__hg-web__Destinations__hg-web-server__Address: http://hg:8080
      Clusters__resumable-web__Destinations__resumable-web-server__Address: http://hg-resumable:80
  hasura:
    image: hasura/graphql-engine:v2.18.0.cli-migrations-v3
    ports:
      - "8081:8080"
    depends_on:
      - "db"
    volumes:
      - ./hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE: 20
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:${LEXBOX_POSTGRES_PW}@db:5432/LexBox
      PG_DATABASE_URL: postgres://postgres:${LEXBOX_POSTGRES_PW}@db:5432/LexBox
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      HASURA_GRAPHQL_ADMIN_SECRET: ${LEXBOX_HASURA_SECRET_KEY:?hasura secret required}
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "naming_convention"
      HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: graphql-default
  db:
    image: postgres
    restart: unless-stopped
    container_name: db
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: ${LEXBOX_POSTGRES_PW:?postgres password required}
  redmine-db:
    image: mysql:5.7.41
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: the_password
    volumes:
      - redmine_db_data:/var/lib/mysql
  hg:
    image: rwgrim/hgkeeper:latest
    container_name: hg
    ports:
      - 8088:8080
    volumes:
      - ./hg-web/repos:/repos
      - ./hg-web/dev-key.pub:/admin-pubkey:ro
    environment:
#      repos path must be here but it is not configurable with an env var
#      the path must be hardcoded in local.hgrc, check the note there for more info
      HGK_REPOS_PATH: /repos
      HGK_ADMIN_USERNAME: admin
      HGK_DISABLE_SSH: true
      HGK_ADMIN_PUBKEY: /admin-pubkey
#      setup is only required the first time, it'll error if it's already been run but that's fine.
    command: bash -c "hgkeeper setup ; hgkeeper serve"
  hg-resumable:
    image: ghcr.io/sillsdev/hgresume:v2023-02-24
    container_name: hg-resumable
    ports:
      - 8034:80
    volumes:
      - ./hg-web/repos:/var/vcs/public
#    this is here so if the container is restarted during an upload they don't have to start over 
      - resumable-cache:/var/cache/hgresume
volumes:
    db_data:
    redmine_db_data:
    resumable-cache: