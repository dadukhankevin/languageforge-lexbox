services:
  lexbox-api:
    tty: true # for dev tools
    stdin_open: true # for dev tools
    build:
      context: backend
      dockerfile: LexBoxApi/dev.Dockerfile
    ports:
      - "5158:5158" # 5158 exposed here for dev tools, and the runtime should only expose 80
    # https://docs.docker.com/compose/compose-file/#depends_on
    depends_on:
      db:
        condition: service_healthy
      hasura:
        condition: service_healthy
      hgkeeper:
        condition: service_started
      hgresume:
        condition: service_started
      otel-collector:
        condition: service_started
    volumes:
      - hg-repos:/hg-repos

      # for dev convenience
      - ./backend:/src/backend
      - nuget-cache:/root/.nuget/packages
    environment:
      DbConfig__LexBoxConnectionString: Host=db;Port=5432;Username=postgres;Password=${LEXBOX_POSTGRES_PW};Database=lexbox
      HasuraConfig__HasuraUrl: http://hasura:8080/v1/graphql
      HasuraConfig__HasuraSecret: ${LEXBOX_HASURA_SECRET_KEY:?hasura secret required}
      HgConfig__RepoPath: /hg-repos
      HgConfig__HgWebUrl: http://hg:8080
      Clusters__hg-web__Destinations__hg-web-server__Address: http://hg:8080
      Clusters__resumable-web__Destinations__resumable-web-server__Address: http://hg-resumable:80

      # for dev convenience
      ASPNETCORE_ENVIRONMENT: Development

  hasura:
    image: hasura/graphql-engine:v2.20.0-ce.cli-migrations-v3
    ports:
      - "8081:8080" # 8081 exposed here for dev tools
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # TODO: named vol needed here shared b/t api and this one.
      - ./hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:${LEXBOX_POSTGRES_PW}@db:5432/lexbox
      PG_DATABASE_URL: postgres://postgres:${LEXBOX_POSTGRES_PW}@db:5432/lexbox
      HASURA_GRAPHQL_ENABLE_TELEMETRY: false
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${LEXBOX_HASURA_SECRET_KEY:?hasura secret required} # need this one, it's also utilized in the api
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention
      HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: graphql-default

      # for dev convenience
      HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE: 20
      HASURA_GRAPHQL_DEV_MODE: "true"

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5433:5432" # 5433 exposed here for dev tools
    volumes:
      - db-data:/var/lib/postgresql
    healthcheck: # TODO: do we need this in k8s?
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: lexbox
      POSTGRES_PASSWORD: ${LEXBOX_POSTGRES_PW:?postgres password required}

  redmine-db:
    image: mysql:5.7.41
    platform:  linux/amd64
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: the_password
    volumes:
      - redmine_db_data:/var/lib/mysql

  # TODO: add manual instructions for getting files into place the first time.
  hgkeeper:
    image: rwgrim/hgkeeper # https://docs.imfreedom.org/hgkeeper/standalonecontainer/
    platform:  linux/amd64
    ports:
      - "8088:8080" # 8088 exposed here for dev tools
    volumes:
      - hg-repos:/repos

      # for dev convenience
      - ./hg-web/dev-key.pub:/admin-pubkey:ro
    environment:
      HGK_REPOS_PATH: /repos
      HGK_ADMIN_USERNAME: admin
      HGK_DISABLE_SSH: true
      HGK_ADMIN_PUBKEY: /admin-pubkey
    command: bash -c "hgkeeper setup ; hgkeeper serve"

  hgresume:
    image: ghcr.io/sillsdev/hgresume:v2023-02-24
    platform:  linux/amd64
    ports:
      - "8034:80" # 8034 exposed here for dev tools
    volumes:
      - hg-repos:/var/vcs/public
      - hgresume-cache:/var/cache/hgresume

  otel-collector:
    image: otel/opentelemetry-collector:0.73.0
    command: [--config=/etc/otel-collector-config.yaml]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 4317:4317 # OTLP gRPC receiver - only required when running backend locally
      - 4318:4318 # OTLP http receiver
      #- 13133:13133 # health_check extension - only required when running backend locally
    environment:
      - LEXBOX_HONEYCOMB_API_KEY=${LEXBOX_HONEYCOMB_API_KEY}

volumes:
    db-data:
    hg-repos:
      # wanted this shared volume to get loaded for local filesystem during dev only
      driver: local
      driver_opts:
        device: ./hg-web/repos
        o: bind
        type: none
    redmine_db_data:
    hgresume-cache:
    nuget-cache:
